The work is base on JCUDA, Please download JCUDA first and add its directory in the System variable PATH. 
The work is compiled by java "1.6.0_38" and  suitable for HIPE 10.0 (64 bit). 



The work's goal is using GPU accelerate Herschel Interactive Processing Environment (HIPE). If you are a beginner, please see "toy" first and you can get the main idea.


The File Structure:
src: the java source of the work
doc: javadoc about the work
lib: jar files
data: the data for test
jython: jython script
toy: a simple example for testing 

Except time cost classes such as NumCount and TimeCost, here are two operators implented by GPU-- MatrixMultiply and FFT.
After you use jar files in lib to replace your own jar files, you can use:
      GPUinfo.GetGPUInfo()
to get the GPU information about your machine. The massage is printed in the OS window where HCSS was started. 

Use:
   MatrixMultiply.SetGPU(True/False)
   FFTSet.GPU(True/False)
to switch between CPU and GPU.

NOTE: You need to change the names of the jar files in the lib directory to add version tag for HIPE.bat to start correctly. For example ia_numeric.jar may need to change to  ia_numeric_3.21.jar. 

We have used the software accelerate M-82 spectroscopy scan map pipeline, and get almost 2 times speed up. Your can see my undergraduate thesis (see the yfjinThesis.pdf file in the directory) for the detail.

Some feedback to me, Yifei Jin <m-astro@163.com> and Professor Maohai Huang at NAOC <mhuang@nao.cas.cn>.

