toy：我们的应用里涉及双精度运算，这是在GPU Compute Capability  1.3以后才支持的。这里作为toy。我们尽量避免平台支持的问题,而主要关注jcuda在hipe中如何使用。toy中在ia_numeric_toolbox_matrix中添加了一个类MatrixMultiplyToy，可以支持GPU的单精度浮点型矩阵乘法。单精度浮点型运算这是一般拥有CUDA核心的GPU都可以支持的。


0.安装好Nvidia驱动和CUDA5.0
1.将jcuda的jar包和动态链接库添加到环境变量中。
    在本机中Window下jcuda保存在C:\Program Files\Java\jdk1.6.0_38\libso中。
    在系统环境变量path中添加动态链接库的路径：
C:\Program Files\Java\jdk1.6.0_38\libso;
   
    在java路径CLASSPATH中添加所有的.jar包（保险起见，也可把它添加到path中）：
C:\Program Files\Java\jdk1.6.0_38\libso\jcublas-0.5.0.jar;C:\Program Files\Java\jdk1.6.0_38\libso\jcufft-0.5.0.jar;C:\Program Files\Java\jdk1.6.0_38\libso\jcurand-0.5.0.jar;C:\Program Files\Java\jdk1.6.0_38\libso\jcusparse-0.5.0.jar;C:\Program Files\Java\jdk1.6.0_38\libso\jcuda-0.5.0.jar;

（这是jcuda官网上的说明：The JAR files have to be present in the CLASSPATH, and the native library files must be located in a path that is visible for Java. In most cases, this should either be a path that is given as a java.library.path for the JVM, or the root directory of the project. (Alternatively, they can also be in a path that is contained in an environment variable like the PATH environment variable on Windows or the LD_LIBRARY_PATH environment variable on Linux).

2.在hipe的repository中替换加入了jcuda应用的jar包。例如本机上repository的路径为：\hcss\repository\modules。


分入下三步，如果用户并不关心如何修改源代码生成自己的应用，而是想快速实现jcuda在自己hipe脚本中的使用，因为java代码有其平台可移值性，可以直接利用本工作提供的jar包，在设置好jcuda路径后，跳转到2.3步。注意本工作的java版本为jdk1.6.0.38。

	2.1 修改源代码，添加需要的应用。这一部分在论文1.2.3节有详细的介绍。这里根据toy代码做具体说明。配置好eclipse后（配置方法见http://herschel.esac.esa.int/twiki/bin/view/Hcss/DeveloperGuide），在eclipse中新建CVS项目，在hercvs01.esac.esa.int:2401/services/repositories/HERSCHEL_CVS地址下找到源代码，新建一个ia.numeric.toolbox.matrix类。
	在main目录下，新建一个MatrixMultiplyToy的java class。将本目录下MatrixMultiplyToy的源代码拷贝进去即可。
	修改该目录下的__init__.py文件。在__all__ 中添加MatrixMultiplyToy。保存。

	2.2 在package explore中找到ia_numeric_toolbox_matrix项目，右键，点击export，选择Jar File。即可生成jar包

	2.3 将生成的jar包替换repository下你当前使用版本（一般为最新）的相应jar包，例如本机目录下的C:\hcss\repository\modules\hcss\ia_numeric_toolbox_matrix\0.41的ia_numeric_toolbox_matrix_0.41.jar。保持文件名一致。（注意备份原jar包，以备他用）

	2.4 替换以后，启动hipe.bat。运行如下脚本

	      A = Int2d([[1,2,3], [2,3,4]])
	      B = Int2d([[1,2], [2,3], [3,4]])
	      X = Float2d([[1,2,3], [2,3,4]])
	      Y = Float2d([[1,2], [2,3], [3,4]])
      
	      print A.apply(MatrixMultiplyToy(B))
	      #结果为[[14, 20], [20, 29]]，则说明jar包替换正确
                                   
	      print X.apply(MatrixMultiplyToy(Y))
	      #结果为[[14, 20], [20, 29]]，则说明jcuda可以使用，GPU运行正确
      


